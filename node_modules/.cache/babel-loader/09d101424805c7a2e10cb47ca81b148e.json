{"ast":null,"code":"import _classCallCheck from\"/home/wws/financial-portfolio-tracker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/wws/financial-portfolio-tracker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/wws/financial-portfolio-tracker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/wws/financial-portfolio-tracker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Axios from'axios';var AlphaCall=/*#__PURE__*/function(_Component){_inherits(AlphaCall,_Component);var _super=_createSuper(AlphaCall);function AlphaCall(){var _this;_classCallCheck(this,AlphaCall);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={newcurrentprice:null,profit:null};return _this;}_createClass(AlphaCall,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var api_key='0XCP84NVEHMH0GIX';var symbol=this.props.symbol;var date=this.props.date;var buyprice=this.props.buyprice;var numberOfShares=this.props.numberOfShares;Axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\".concat(symbol,\"&outputsize=full&apikey=\").concat(api_key)).then(function(response){//   console.log(response);\nvar currentprice=response.data['Time Series (Daily)'][date]['4. close'];var profit=(currentprice-buyprice)*numberOfShares;// profit and loss logic!\nprofit=+profit.toFixed(2);//   profit = (current price – buy price) * no. of shares\n_this2.setState({newcurrentprice:currentprice,profit:profit});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"td\",null,this.state.newcurrentprice),/*#__PURE__*/React.createElement(\"td\",null,this.state.profit));}}]);return AlphaCall;}(Component);export default AlphaCall;","map":{"version":3,"sources":["/home/wws/financial-portfolio-tracker-app/src/components/MyStock/AlphaCall.js"],"names":["React","Component","Axios","AlphaCall","state","newcurrentprice","profit","api_key","symbol","props","date","buyprice","numberOfShares","get","then","response","currentprice","data","toFixed","setState","catch","error","console","log"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,S,uUAEHC,K,CAAQ,CACLC,eAAe,CAAE,IADZ,CAELC,MAAM,CAAE,IAFH,C,kGAKY,iBACnB,GAAMC,CAAAA,OAAO,CAAG,kBAAhB,CAEA,GAAIC,CAAAA,MAAM,CAAI,KAAKC,KAAL,CAAWD,MAAzB,CACA,GAAIE,CAAAA,IAAI,CAAG,KAAKD,KAAL,CAAWC,IAAtB,CACA,GAAIC,CAAAA,QAAQ,CAAG,KAAKF,KAAL,CAAWE,QAA1B,CACA,GAAIC,CAAAA,cAAc,CAAG,KAAKH,KAAL,CAAWG,cAAhC,CAEAV,KAAK,CAACW,GAAN,+EAAiFL,MAAjF,oCAAkHD,OAAlH,GACCO,IADD,CACM,SAAAC,QAAQ,CAAI,CAChB;AACE,GAAIC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAAT,CAAc,qBAAd,EAAqCP,IAArC,EAA2C,UAA3C,CAAnB,CACA,GAAIJ,CAAAA,MAAM,CAAI,CAACU,YAAY,CAAGL,QAAhB,EAA0BC,cAAxC,CAAyD;AACzDN,MAAM,CAAG,CAACA,MAAM,CAACY,OAAP,CAAe,CAAf,CAAV,CACF;AACE,MAAI,CAACC,QAAL,CAAc,CACVd,eAAe,CAAEW,YADP,CAEVV,MAAM,CAANA,MAFU,CAAd,EAIH,CAXD,EAYCc,KAZD,CAYO,SAAAC,KAAK,CAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,CAZpC,EAcF,C,uCAEU,CACN,mBACG,qDACG,8BAAK,KAAKjB,KAAL,CAAWC,eAAhB,CADH,cAEG,8BAAK,KAAKD,KAAL,CAAWE,MAAhB,CAFH,CADH,CAMF,C,uBAtCoBL,S,EAyCxB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass AlphaCall extends Component {\n\n   state = {\n      newcurrentprice: null,\n      profit: null\n   }\n\n   componentDidMount() {\n    const api_key = '0XCP84NVEHMH0GIX';\n\n    var symbol =  this.props.symbol;\n    var date = this.props.date;\n    var buyprice = this.props.buyprice;\n    var numberOfShares = this.props.numberOfShares;\n\n    Axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=full&apikey=${api_key}`)\n    .then(response => {\n      //   console.log(response);\n        let currentprice = response.data['Time Series (Daily)'][date]['4. close'];\n        let profit = ((currentprice - buyprice)*numberOfShares); // profit and loss logic!\n        profit = +profit.toFixed(2);\n      //   profit = (current price – buy price) * no. of shares\n        this.setState({\n            newcurrentprice: currentprice,\n            profit\n        })\n    })\n    .catch(error => {console.log(error)});\n\n }\n\n   render() {\n      return (\n         <>\n            <td>{this.state.newcurrentprice}</td>\n            <td>{this.state.profit}</td>\n         </>\n      )\n   }\n}\n\nexport default AlphaCall\n\n"]},"metadata":{},"sourceType":"module"}